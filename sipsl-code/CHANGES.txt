CHANGES


24 giugno

fixed ACK con due call back a seconda del tipo di ack
il tipo di ACK è riconsiuto nel call_oset guardando se cè un invite con lo stesso CSeq e se è gia arrivato un 2xx
(questo lo fa guardando lo stato della macchina dell'invite)

chiamata connessa!

-------------------------------------------------------

23 giugno

non transactional ack:
se lo mando alla ALO non so che tipo di ack è 

quindi potrei:
l'ack lato B viene mandato con un nuovo tipo TYPE_NOTIF
la alo chiama  una call back diversa: onAckNoTrnsct()

TESTARE!!!
-------------------------------------------------------


23 giugno
correzione gestione headers

C_HeadCallId ok

C_HeadFrom fixed
C_HeadCSeq fixed
C_HeadContact fixed
C_HeadTo fixed
C_HeadVia fixed

sip-communicator doe not find the invite INVITE transaction

deve essere:
40 INVITE -> SIP
SIP -> 50 INVITE
40 ACK -> SIP
SIP -> 50 ACK

ma allora le transazioni???

-------------------------------------------------------

21 june
Ack still not working
7r/n ???
From and to are ok.

Decidere se il content di un header deve avere l'header o no!!!!

-------------------------------------------------------


June 10

ACK almost done,
need to fix this:

To: To: <sip:gugli_linphone@172.21.160.181:5061>;tag=9f7bc830
From: From: <sip:gugli_twinkle@guglicorp.com>;tag=9d448d81276175425117411

-------------------------------------------------------

V5 June 4
alarm fixed.
To do: the server state machine received the 180ringing from the client machine.

change: 
		TRNSCT_SM* trnsct_cl = call_oset->getTrnsctSm(_message->getHeadCSeq().getMethod().getContent(), SODE_TRNSCT_CL, _message->getHeadCSeq().getSequence());


V5 June 2

alarm issues 

-------------------------------------------------------------

V5 28 MAGGIO

fix alarm! must pause!
fix state machine design when invite has to be retransmitted!!!


--------------------------------------------------------------

28 Aprile

bye ancora non completo 

il messaggio matrice deve essere quello della transazione. quindi per esempio 
il 200OK generatore dalla valo deriva dall'invite oppure dal bye.


----> before
following is ???
fixe genMEssage v4??? is needede
I need to store INVITE A and INVITE B

************************************************************************************
12 bug
when parsing message
header: aaa aaa aaa aaa
is equivalent
header: aaa
 aaa
 aaa
(with space or tab)
************************************************************************************
************************************************************************************
************************************************************************************
11. fixed: all variable are stored in a map
store to tag from B (sent with DE or 180 RING or 200 OK)
10. fixed in call setup
contact 
------------------------------------------------------------------------------------
9. (extends bug 7) DONE SIPUTIL
must define a method oon which all the header changes are made in single part of the code
like SIP factory...
------------------------------------------------------------------------------------
8. fixed
outging INVITE has still the same call ID of the incoming
------------------------------------------------------------------------------------
7.
Rport, and other headers required to go to bside must be put in common from alo
and client machine, now they are hard coded.
------------------------------------------------------------------------------------
1.
Incorporate SIPENGINE and SL_CC into a single Engine and run SL_CO over a new Engine
This will allow to have a set of threads working on global data and a set of threads
working on call (subscriber) data.
ALO is engine.

------------------------------------------------------------------------------------
2.
The ALO cannot create a call, because the message coming from it must have a generator
The solution can be that ALO defines itself an APOINT so the message will be handled
like a new call.

------------------------------------------------------------------------------------
3. FIXED 
Change the Action and Alarm to support internal operation and message sending
Now MESSAGE and INTERNALOP are 
INTERNALOP : public MESSAGE
then use dynamic_cast to check if the incoming message is operation or not.

Fixed in other manner.

------------------------------------------------------------------------------------
4. FIXED 2OOok to ALO
Dialog established, ringing and 200 ok must first go to ALO and then to SMSV
ALO needs to build the message and send it to SMSV which changes state and
sends to network side A

------------------------------------------------------------------------------------
5. FIXED
Is it needed to have this as multimap???
callx-cally 1:n
typedef multimap<string, string> CALL_ID_Y2X;
changed to map.

------------------------------------------------------------------------------------
6. OK 
200 OK (and other replies) from B is sent to client sm and this one creates the new
reply for A.
It shoudl sent it to ALO. ALO can or not change it and forward to server sm, which
sinds it to A.

or:
200OK arrives from B, is sent to client sm which fwd it to ALO, ALO creates the new
200 ok (like the INVITE) and fwd to server sm which sends to A.

INVITE arrives to svsm the to ALO, ALO creates the INVITE
ALO must create the INVITE since it is made following business rules...

************************************************************************************
************************************************************************************
